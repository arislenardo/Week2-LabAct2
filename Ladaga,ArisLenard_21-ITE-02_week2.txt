<?php
class Book {
    public $title;
    protected $author;
    private $price;

    public function __construct($title, $author, $price) {
        $this->title = $title;
        $this->author = $author;
        $this->price = $price;
    }

    public function getDetails() {
        return "Title: $this->title, Author: $this->author, Price: $" . number_format($this->price, 2) . "<br>";
    }

    //sett the price of the book (only accessible within class or subclass)
    protected function setPrice($price) {
        $this->price = $price;
    }

    //magic method __call for handling non-existent method calls
    public function __call($name, $arguments) {
        echo "Stock updated for '{$this->title}' with arguments: " . implode(', ', $arguments) . "<br>";
    }

    //public method to update the price (to demonstrate setPrice within class)
    public function updatePrice($price) {
        $this->setPrice($price);
    }
}

class Library {
    private $books = [];
    public $name;

    //constructor
    public function __construct($name) {
        $this->name = $name;
    }

    //adds book to library
    public function addBook(Book $book) {
        $this->books[] = $book;
    }

    //removes book from library
    public function removeBook($title) {
        foreach ($this->books as $index => $book) {
            if ($book->title === $title) {
                unset($this->books[$index]);
                echo "Book '$title' removed from the library. <br>";
                return;
            }
        }
        echo "Book '$title' not found in the library.<br>";
    }

    //Lists all books in the library
    public function listBooks($message = "Books in the library: <br>") {
        echo "$message\n";
        if (empty($this->books)) {
            echo "No books available in the library.<br>";
        } else {
            foreach ($this->books as $book) {
                echo $book->getDetails() . "\n";
            }
        }
    }

    //Destructor
    public function __destruct() {
        echo "The library '{$this->name}' is now closed.\n";
    }
}

//creates a Library instance
$library = new Library("City Library");

//creates Book instances
$book1 = new Book("The Great Gatsby", "F. Scott Fitzgerald", 12.99);
$book2 = new Book("1984", "George Orwell", 8.99);

$library->addBook($book1);
$library->addBook($book2);

$book1->updateStock(50);

$library->listBooks();

$library->removeBook("1984");

$library->listBooks("Books in the library after removal: <br>");

//Destroy the Library object (triggers destructor)
unset($library);
?>